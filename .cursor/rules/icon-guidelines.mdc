---
description: Icon usage guidelines and Material Symbols preferences for Krafters UI
alwaysApply: false
---
# Icon Usage Guidelines

Krafters UI components support icons through the `icon` prop, powered by [@nuxt/icon](https://nuxt.com/modules/icon) and Iconify. This provides access to over 200,000 open-source vector icons.

## Icon Library Preference

We primarily use the **Material Symbols** library for consistency across the design system:

- **Preferred**: `material-symbols` with rounded variants
- **Default Style**: `outline-rounded` (outlined icons with rounded corners)
- **Alternative**: `rounded` (filled icons with rounded corners) when design requires
- **Fallback**: Default rounded variant (no suffix) when outline variant is not available
- **Fallback**: Default variant (no suffix) when both outline and rounded variants are not available

## Usage Examples

```vue
<template>
  <!-- Using outline-rounded variant (preferred) -->
  <Button icon="material-symbols:home-outline-rounded" label="Home" />

  <!-- Using rounded variant (without outline suffix) when the design requires it -->
  <Button icon="material-symbols:star-rounded" label="Favorite" />

  <!-- Using default variant when no rounded variants are available -->
  <Button icon="material-symbols:account-circle" label="Profile" />

  <!-- Other components with icon support -->
  <Input icon="material-symbols:search-rounded" label="Search" />
  <Chip icon="material-symbols:check-rounded" label="Completed" />
</template>
```

## Icon Naming Convention

Material Symbols icons follow this pattern:

- `material-symbols:{icon-name}-{variant}`
- Common variants: `outline-rounded`, `rounded`, `outline`, `sharp`

## Finding Icons

1. **Browse**: Visit [Material Symbols collection](https://icones.js.org/collection/material-symbols) on icones.js.org
2. **Search**: Use the search functionality to find specific icons
3. **Preview**: Hover over icons to see their names and variants
4. **Filter**: Use the variant filters to find outline-rounded, rounded, or default variants

## Best Practices

- **Consistency**: Stick to Material Symbols library when possible
- **Accessibility**: Icons are usually used to support text labels, because by default they are hidden from screen readers. They should be accompanied by text labels or proper ARIA labels.
- **Size**: Icons automatically scale with the component's size
- **Performance**: Icons are loaded on-demand to keep bundle size minimal
- **Layout Shift**: When an icon causes layout shift, add it to the `defaultIcons` array in `utils` (used by `nuxt.config`)

## Icon Selection Process

When suggesting an icon:
1. First check Material Symbols collection on icones.js.org
2. Prefer outline-rounded variants
3. Use rounded variants when design requires filled icons
4. Fall back to default variants when rounded options aren't available
5. Always consider accessibility implications