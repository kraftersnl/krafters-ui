/* Color design tokens */
:where(.dark-mode) {
  --color-scheme: dark;

  --color-accent: hsl(294 50% 70%);
  --color-accent-bg: hsl(294 25% 20%);
  --color-accent-text: hsl(294 50% 70%);
  --color-accent-graphic: hsl(294 50% 70%);

  --color-black: white;
  --color-text: hsl(280 25% 90%);
  --color-grey-text: hsl(280 20% 65%);
  --color-grey-graphic: hsl(280 26% 46%);
  --color-grey-light: hsl(280 24% 23%);
  --color-grey-bg: hsl(280 27% 17%);
  --color-bg: hsl(280 26% 9%);
  --color-card-bg: hsl(280 27% 12%);
  --color-white: hsl(280 41% 7%);

  --color-red: hsl(0 100% 60%);
  --color-red-bg: hsl(0 33% 19%);
  --color-red-text: hsl(0 69% 67%);
  --color-red-graphic: hsl(0 63% 65%);

  --color-orange: hsl(30 100% 50%);
  --color-orange-bg: hsl(30 67% 18%);
  --color-orange-text: hsl(30 100% 60%);
  --color-orange-graphic: hsl(30 100% 45%);

  --color-yellow: hsl(60 80% 50%);
  --color-yellow-bg: hsl(50 43% 20%);
  --color-yellow-text: hsl(50 70% 50%);
  --color-yellow-graphic: hsl(60 60% 40%);

  --color-green: hsl(150 100% 28%);
  --color-green-bg: hsl(150 50% 15%);
  --color-green-text: hsl(150 50% 55%);
  --color-green-graphic: hsl(150 100% 33%);

  --color-blue: hsl(220 53% 58%);
  --color-blue-bg: hsl(240 60% 30%);
  --color-blue-text: hsl(220 100% 75%);
  --color-blue-graphic: hsl(220 100% 60%);

  --color-purple: hsl(280 100% 70%);
  --color-purple-bg: hsl(280 100% 20%);
  --color-purple-text: hsl(280 100% 70%);
  --color-purple-graphic: hsl(280 100% 70%);

  --color-pink: hsl(320 100% 75%);
  --color-pink-bg: hsl(320 100% 15%);
  --color-pink-text: hsl(320 100% 75%);
  --color-pink-graphic: hsl(320 100% 75%);

  --rgb-app-nav: 0 0 0;
  --hsl-app-nav: 280 26% 9%;

  --shadow-color: 282deg 0% 2%;

  --color-dialog-bg: var(--color-white);
  --color-input-bg: var(--color-card-bg);
  --color-card-border: var(--color-grey-bg);
  --color-popover-border: var(--color-grey-bg);
  --color-select-bg: var(--color-bg);

  .card {
    --color-input-bg: var(--color-bg);
    --color-select-bg: var(--color-white);
  }
}

:where(.light-mode) {
  --color-scheme: light;

  --color-accent: hsl(294 20% 40%);
  --color-accent-bg: hsl(294 25% 94%);
  --color-accent-text: hsl(294 20% 40%);
  --color-accent-graphic: hsl(294 20% 40%);

  --color-black: black;
  --color-text: hsl(21 13% 20%);
  --color-grey-text: hsl(0 0% 40%);
  --color-grey-graphic: hsl(0 0% 55%);
  --color-grey-light: hsl(0 0% 88%);
  --color-grey-bg: hsl(0 0% 94%);
  --color-bg: hsl(280 0% 98%);
  --color-card-bg: white;
  --color-white: white;

  --color-red: hsl(0 100% 60%);
  --color-red-bg: hsl(0 49% 90%);
  --color-red-text: hsl(0 67% 44%);
  --color-red-graphic: hsl(0 100% 40%);

  --color-orange: hsl(30 100% 50%);
  --color-orange-bg: hsl(30 65% 87%);
  --color-orange-text: hsl(30 100% 30%);
  --color-orange-graphic: hsl(30 100% 45%);

  --color-yellow: hsl(50 100% 46%);
  --color-yellow-bg: hsl(50 75% 85%);
  --color-yellow-text: hsl(50 100% 24%);
  --color-yellow-graphic: hsl(45 80% 40%);

  --color-green: hsl(150 100% 25%);
  --color-green-bg: hsl(150 35% 90%);
  --color-green-text: hsl(150 100% 20%);
  --color-green-graphic: hsl(150 100% 25%);

  --color-blue: hsl(220 100% 50%);
  --color-blue-bg: hsl(220 80% 92%);
  --color-blue-text: hsl(220 100% 30%);
  --color-blue-graphic: hsl(220 100% 50%);

  --color-purple: hsl(280 100% 40%);
  --color-purple-bg: hsl(280 100% 94%);
  --color-purple-text: hsl(280 50% 40%);
  --color-purple-graphic: hsl(280 100% 40%);

  --color-pink: hsl(320 100% 70%);
  --color-pink-bg: hsl(320 100% 93%);
  --color-pink-text: hsl(320 70% 40%);
  --color-pink-graphic: hsl(320 70% 40%);

  --rgb-app-nav: 255 255 255;
  --hsl-app-nav: 280 0% 98%;

  --shadow-color: 277deg 0% 60%;

  --color-dialog-bg: var(--color-card-bg);
  --color-input-bg: var(--color-card-bg);
  --color-select-bg: var(--color-bg);
  --color-card-border: var(--color-grey-bg);
  --color-popover-border: transparent;
}

:where(:root) {
  --duration-xs: 0.1s;
  --duration-sm: 0.2s;
  --duration-md: 0.35s;
  --duration-lg: 0.65s;
  --duration-xl: 1.35s;
  --duration-xxl: 2s;
  --cubic-bezier: cubic-bezier(0.215, 0.61, 0.355, 1);

  @media (prefers-reduced-motion: prefers-reduced-motion) {
    --duration-xs: 0s;
    --duration-sm: 0s;
    --duration-md: 0s;
    --duration-lg: 0s;
    --duration-xl: 0s;
    --duration-xxl: 0s;
  }

  /* Border radius design tokens */
  --radius-xs: 2px;
  --radius-sm: 4px;
  --radius-md: 8px;
  --radius-lg: 12px;
  --radius-xl: 24px;
  --radius-full: 999px;

  /* Font weight design tokens */
  --font-weight-regular: 400;
  --font-weight-medium: 500;
  --font-weight-bold: 600;

  /* Font size design tokens */
  --font-size-xxxxxl: 4rem;
  --font-size-xxxxl: 3rem;
  --font-size-xxxl: 2.5rem;
  --font-size-xxl: 2rem;
  --font-size-xl: 1.5rem;
  --font-size-lg: 1.25rem;
  --font-size-md: 1rem;
  --font-size-sm: 0.875rem;
  --font-size-xs: 0.75rem;
  --font-size-xxs: 0.6875rem;
  --font-size-xxxs: 0.625rem;

  /* Size design tokens - only used by Skeleton and Spacer components */
  --size-xxxxl: 12rem; /* 192px */
  --size-xxxl: 8rem; /* 128px */
  --size-xxl: 4rem; /* 64px */
  --size-xl: 2.5rem; /* 40px */
  --size-lg: 1.75rem; /* 28px */
  --size-md: 1.25rem; /* 20px */
  --size-sm: 1rem; /* 16px */
  --size-xs: 0.75rem; /* 12px */
  --size-xxs: 0.5rem; /* 8px */
  --size-xxxs: 0.25rem; /* 4px */

  /* Utility design tokens */
  --focus-color: var(--color-black);

  /* Shadow design token */
  --shadow: 4px 4px 16px rgba(0 0 0 / 0.16);
  --shadow-1:
    0.3px 0.3px 0.6px hsl(var(--shadow-color) / 0),
    1.3px 1.3px 2.8px hsl(var(--shadow-color) / 0.52);
  --shadow-2:
    0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.18),
    0.9px 1.7px 2.4px -0.5px hsl(var(--shadow-color) / 0.22),
    1.9px 3.9px 5.4px -1.1px hsl(var(--shadow-color) / 0.27),
    4.4px 8.8px 12.3px -1.6px hsl(var(--shadow-color) / 0.31);
  --shadow-3:
    0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.19),
    1.6px 3.3px 4.6px -0.3px hsl(var(--shadow-color) / 0.22),
    3px 6px 8.4px -0.5px hsl(var(--shadow-color) / 0.24),
    4.9px 9.8px 13.7px -0.8px hsl(var(--shadow-color) / 0.27),
    7.8px 15.6px 21.8px -1.1px hsl(var(--shadow-color) / 0.3);

  /* Animation design tokens */
  --animation-rotate: rotateLeft var(--duration-xl) linear infinite;
  --animation-shimmer: shimmer var(--duration-xxl) linear infinite;
  --animation-pulse: pulse var(--duration-xxl) cubic-bezier(0.4, 0, 0.6, 1)
    infinite;
  --animation-shake: shake var(--duration-lg) both;
  --animation-target: highlightTarget var(--duration-xxl) forwards;

  /* Other design token */
  --app-padding-block: 1rem;
  --app-padding-inline: 0.75rem;

  --color-accent-darker: color-mix(
    in srgb,
    var(--color-accent) 20%,
    var(--color-black)
  );

  --color-accent-lighter: color-mix(
    in srgb,
    var(--color-accent) 20%,
    var(--color-white)
  );

  --gradient-accent-bg: linear-gradient(
    to bottom in oklch,
    var(--color-accent-bg),
    var(--color-accent-lighter)
  );

  --gradient-accent-text: linear-gradient(
    to right in oklch,
    var(--color-accent),
    var(--color-accent-bg)
  );

  --gradient-accent-graphic: linear-gradient(
    to right in oklch,
    var(--color-accent),
    var(--color-accent-bg)
  );

  .gradient-text {
    color: transparent;
    background-clip: text;
    background-image: var(--gradient-accent-text);
  }

  .gradient-link {
    text-decoration: none;
    background-image: var(--gradient-accent-graphic);
    background-repeat: no-repeat;
    background-position: left bottom;
    background-size: 0% 2px;
    transition: background-size var(--duration-md);

    &:hover {
      background-size: 100% 2px;
    }
  }

  @media (min-width: 480px) {
    --app-padding-inline: 1.5rem;
  }
}

/* CSS Reset */
*,
*::after,
*::before {
  box-sizing: border-box;
}

:where(html) {
  color-scheme: var(--color-scheme, dark light);
  accent-color: var(--color-accent, inherit);

  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  text-size-adjust: none;

  /* prevent obscured content when using the keyboard to shift focus */
  scroll-padding-block: 1rem;

  @media (min-width: 360px) and (min-height: 360px) {
    scroll-padding-block: 2rem;
  }
}

:where(body) {
  margin: 0;
  min-height: 100svh;
  background-color: var(--color-bg);
  font-family: var(--font-family, system-ui);
  line-height: var(--line-height, 1.5);
  overflow-wrap: break-word;
  color: var(--color-text);
  scrollbar-gutter: stable;
}

:where(main) {
  container-type: inline-size;
  scroll-margin-block: var(--app-header-height);
}

:where(img) {
  word-break: break-all;
  font-style: italic;
  font-size: var(--font-size-xs);
}

:where(img, video, picture) {
  display: block;
  max-width: 100%;
  object-fit: cover;
}

:where(svg) {
  max-width: 100%;
  object-fit: cover;
}

:where(figure) {
  margin: 0;
}

:where(blockquote) {
  quotes: '“' '”';
  margin: 0;
  border-inline-start: 3px solid var(--color-grey-bg);
  padding-inline-start: 1.25rem;

  > p {
    margin-block-start: 0;
    font-style: italic;
    text-wrap: balance;
  }
}

:where(a) {
  color: currentColor;
  outline-offset: 2px;
  text-underline-offset: 0.25em;

  &:focus-visible {
    text-decoration: none;
    outline: 2px solid var(--focus-color);
  }
}

:where(h1) {
  margin-block-start: 0;
}

:where(h1, h2, h3, h4, h5, h6, button, input, label, .label, legend) {
  line-height: var(--line-height-heading, 1.25);
}

:where(h1, h2, h3, h4, h5, h6) {
  text-wrap: balance;
  -webkit-hyphens: auto;
  hyphens: auto;
}

:where(p) {
  text-wrap: pretty;
  white-space: pre-line;
}

:where(s) {
  color: var(--color-grey-text);
}

:where(dl) {
  margin-block: 0;
}

:where(dd) {
  margin-inline-start: 0;
}

:where(ol) {
  list-style-position: outside;
  padding-inline-start: 1.5rem;

  li > p {
    margin-block: 0rem 0.35rem;
  }
}

:where(ul) {
  list-style-position: outside;
  padding-inline-start: 1.5rem;

  li > p {
    margin-block: 0rem 0.35rem;
  }
}

:where(ul[role='list'], ol[role='list']) {
  list-style: none;
  padding-inline-start: 0;
  margin-block: 0;
}

:where(ul) > li::marker {
  color: inherit;
}

:where(ol) > li::marker {
  color: var(--color-accent-graphic);
  font-variant-numeric: tabular-nums;
}

:where(code) {
  color: var(--color-text);
  font-weight: var(--font-weight-regular);
  background-color: var(--color-grey-bg);
  padding-inline: 0.25em;
  border-radius: var(--radius-sm);
  overflow-wrap: anywhere;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

:where(pre) {
  overflow: auto;
  white-space: pre-wrap;
  word-break: break-all;
}

:where(pre code) {
  border-radius: var(--radius-md);
  display: inline-block;
  padding: 0.75rem 1rem;
}

:where(address) {
  display: inline;
  font-style: normal;
  white-space: pre-line;
}

:where(kbd) {
  background-color: var(--color-white);
  border-radius: var(--radius-sm);
  padding-inline: 0.35rem;
  padding-block: 0.1rem 0.15rem;
  border: 1px solid var(--color-grey-bg);
  box-shadow: inset 0 -2px 0 var(--color-grey-bg);

  &:has(.iconify) {
    padding-block: 0.2rem 0.05rem;
  }
}

:where(abbr) {
  text-decoration: none;

  &:hover {
    text-decoration: dotted underline;
    text-underline-offset: 0.35rem;
  }
}

:where(hr) {
  border: 0;
  width: 100%;
  height: 1px;
  background-color: var(--color-grey-bg);
  margin-block: 0;
}

:where(table) {
  border-collapse: collapse;
  text-align: left;
  font-variant-numeric: tabular-nums;

  thead th {
    font-weight: var(--font-weight-medium);
    color: var(--color-grey-text);
  }

  tbody th {
    font-weight: var(--font-weight-medium);
  }

  th,
  td {
    padding: 0.5rem;
  }

  thead tr {
    border-color: var(--color-grey-bg);
    border-style: solid;
    border-width: 0 0 0 0;
  }

  tbody tr {
    border-color: var(--color-grey-bg);
    border-style: solid;
    border-width: 1px 0;
  }
}

.table-cell {
  vertical-align: middle;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}

:where(button) {
  font: inherit;
  color: inherit;
  font-weight: var(--font-weight-medium);

  &:focus-visible {
    outline: 2px solid var(--focus-color);
  }
}

/* Form inputs */
:where(.label, label) {
  font-weight: var(--font-weight-medium);
}
:where(.label, label, legend) {
  -webkit-user-select: none;
  user-select: none;
  transition-property: opacity;
  transition-duration: var(--duration-sm);

  &.disabled {
    opacity: 25%;
  }
}

:where(fieldset) {
  border: none;
  padding: 0;
  margin-inline: 0;
}

:where(legend) {
  padding: 0;
  font-weight: var(--font-weight-medium);
}

:where(textarea) {
  padding: 0.5rem;
  resize: vertical;
}

:where(input) {
  background-color: transparent;
  filter: none;

  &:-webkit-autofill {
    -webkit-text-fill-color: var(--color-accent-text);
    box-shadow: 0 0 0 100px var(--color-accent-bg) inset;
  }
}

:where(.file-input-wrapper, .form-field-wrapper, .markdown-editor) {
  position: relative;
  display: inline-grid;
  align-items: center;
  align-content: start;
  transition-property: opacity;
  transition-duration: var(--duration-sm);

  label,
  .label {
    display: inline-flex;
    gap: 0.35rem;
    min-height: 1.25rem;
    align-items: center;
    font-size: var(--font-size-xs);
    margin-block-end: 0.125rem;
    color: var(--color-grey-text);
  }

  .instruction {
    margin-block-start: 0.25rem;
    margin-block-end: 0;
    font-size: var(--font-size-xxs);
    color: var(--color-grey-text);
  }

  &:has(.select:disabled, .input:disabled, .textarea:disabled) {
    opacity: 35%;
  }

  .select,
  .input,
  .textarea {
    font-family: system-ui, sans-serif;
    font-size: 16px;
    width: 100%;
    border: 1px solid var(--color-grey-graphic);
    border-radius: var(--radius-md);

    &::placeholder {
      color: var(--color-grey-graphic);
    }
  }

  .select {
    color: var(--color-text);

    &:focus-visible {
      outline: 1px solid var(--focus-color);
      border-color: var(--focus-color);
    }
  }

  .input,
  .textarea {
    &:focus {
      outline: 1px solid var(--focus-color);
      border-color: var(--focus-color);
    }
  }
}

:where(.error-wrapper) {
  .error {
    display: none;
    align-items: center;
    gap: 0.25rem;
    color: var(--color-red-text);
    font-size: var(--font-size-xxs);
    padding-block-start: 0.25rem;
  }

  .iconify {
    flex-shrink: 0;
  }
}

:where(.form-field-wrapper.show-invalid:has(:invalid)),
:where(.show-invalid) .form-field-wrapper:has(:invalid) {
  .select,
  .textarea,
  .input {
    border-color: var(--color-red-graphic);
  }

  .error-wrapper .error {
    display: flex;
  }
}

:where(.show-invalid) .input-variant--krafters:has(:invalid) .input:not(:focus),
:where(.show-invalid)
  .select-variant--krafters:has(:invalid)
  .select:not(:focus),
:where(.show-invalid)
  .textarea-variant--krafters:has(:invalid)
  .textarea:not(:focus) {
  box-shadow: 0 1.5px 0 0 var(--color-red);
}

/* Tippy classes for Popover and Tooltip components */
.tippy-box[data-theme~='krafters'] {
  border-radius: var(--radius-md);
  box-shadow: var(--shadow);
  color: var(--color-text);
  background-color: var(--color-card-bg);
  border: 1px solid var(--color-popover-border);

  --arrow-color: var(--color-card-border);
}

.light-mode {
  .tippy-box[data-theme~='krafters'] {
    --arrow-color: var(--color-card-bg);
  }
}

[data-theme~='krafters'] .tippy-content {
  font-size: var(--font-size-sm);
  border-radius: var(--radius-md);
  padding: 0;
}

.tippy-box[data-theme~='krafters'][data-placement^='top']
  > .tippy-arrow::before {
  border-block-start-color: var(--arrow-color);
  bottom: -8px;
}

.tippy-box[data-theme~='krafters'][data-placement^='bottom']
  > .tippy-arrow:before {
  border-block-end-color: var(--arrow-color);
  top: -8px;
}

.tippy-box[data-theme~='krafters'][data-placement^='left']
  > .tippy-arrow::before {
  border-inline-start-color: var(--arrow-color);
  right: -8px;
}

.tippy-box[data-theme~='krafters'][data-placement^='right']
  > .tippy-arrow::before {
  border-inline-end-color: var(--arrow-color);
  left: -8px;
}

.tippy-box[data-theme~='krafters'] > .tippy-backdrop {
  background-color: var(--color-card-bg);
}

.tippy-box[data-theme~='krafters'] > .tippy-svg-arrow {
  fill: var(--color-card-bg);
}

/* Utility helper classes */
.visuallyhidden {
  position: fixed;
  z-index: -1;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

:where(.flex-wrapper) {
  --gap: 0.5rem;
  --flex-grow: 1;
  display: flex;
  gap: var(--gap);
  flex-grow: var(--flex-grow);
  flex-wrap: wrap;
  align-items: center;
}

:where(.grid-wrapper) {
  --gap: 1rem;
  display: grid;
  gap: var(--gap);
}

:where(.title-wrapper) {
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.5em;

  > .iconify {
    font-size: inherit;
    flex-shrink: 0;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-block-end: 0;
  }
}

:where(.section-topbar) {
  display: flex;
  flex-wrap: wrap;
  grid-template-columns: 1fr auto;
  justify-content: space-between;
  column-gap: 0.5rem;
  row-gap: 1rem;

  h1,
  h2,
  h3,
  h4,
  h4,
  h6 {
    margin-block-end: 0;
  }
}

:where(.definition-list) {
  display: grid;
  grid-template-columns: auto 1fr;
  column-gap: 1rem;
  row-gap: 0.25rem;

  dt {
    font-weight: var(--font-weight-medium);
  }
}

:where(.button-group) {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;

  > .button {
    flex-grow: 1;
  }
}

.user-select-none {
  -webkit-user-select: none;
  user-select: none;
}

:where(.bold, b, strong) {
  font-weight: var(--font-weight-bold);
}

.capitalize::first-letter,
.capitalize > ::first-letter {
  text-transform: capitalize;
}

.small {
  font-size: 0.8em;
}

.small-caps {
  font-variant-caps: all-small-caps;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.overflow-wrap-anywhere {
  overflow-wrap: anywhere;
}

.fs-xxl {
  font-size: var(--font-size-xxl);
}
.fs-xl {
  font-size: var(--font-size-xl);
}
.fs-lg {
  font-size: var(--font-size-lg);
}
.fs-md {
  font-size: var(--font-size-md);
}
.fs-sm {
  font-size: var(--font-size-sm);
}
.fs-xs {
  font-size: var(--font-size-xs);
}
.fs-xxs {
  font-size: var(--font-size-xxs);
}

.c-grey-bg {
  color: var(--color-grey-bg);
}
.c-grey-graphic {
  color: var(--color-grey-graphic);
}
.c-grey-text {
  color: var(--color-grey-text);
}
.c-accent {
  color: var(--color-accent);
}
.c-accent-text {
  color: var(--color-accent-text);
}

.mbs-0 {
  margin-block-start: 0;
}
.mbs-1 {
  margin-block-start: 1rem;
}
.mbs-2 {
  margin-block-start: 2rem;
}

.mbe-0 {
  margin-block-end: 0;
}
.mbe-1 {
  margin-block-end: 1rem;
}
.mbe-2 {
  margin-block-end: 2rem;
}

/* Vue Transitions */
.stretch-fade-enter-active,
.stretch-fade-leave-active {
  transition: all var(--duration-sm) ease-in-out;
}
.stretch-fade-enter-from,
.stretch-fade-leave-to {
  transform: scaleY(95%);
  opacity: 0;
}

.fade-enter-active,
.fade-leave-active {
  transition: all var(--duration-sm) ease-out;
}
.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

.fade-slow-enter-active,
.fade-slow-leave-active {
  transition: all var(--duration-md) ease-out;
  transition-delay: var(--duration-sm);
}
.fade-slow-enter-from,
.fade-slow-leave-to {
  opacity: 0;
}

.blur-enter-active,
.blur-leave-active {
  transition: all var(--duration-md) ease-out;
}
.blur-enter-from,
.blur-leave-to {
  opacity: 0.25;
  filter: blur(0.125rem);
}

/* Animations */
@keyframes scale-x {
  to {
    transform: scaleX(0);
  }
}

@keyframes rotateLeft {
  to {
    rotate: -1turn;
  }
}

@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}

@keyframes shimmer {
  0% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes shake {
  0% {
    translate: -10px 0;
  }
  16% {
    translate: 9px 0;
  }
  33% {
    translate: -6px 0;
  }
  50% {
    translate: 5px 0;
  }
  66% {
    translate: -2px 0;
  }
  83% {
    translate: 1px 0;
  }
  100% {
    translate: 0px 0;
  }
}

@keyframes bounceInBottom {
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: var(--cubic-bezier);
  }
  from {
    transform: translateY(1000px);
  }
  60% {
    transform: translateY(-16px);
  }
  75% {
    transform: translateY(8px);
  }
  90% {
    transform: translateY(-4px);
  }
  to {
    transform: none;
  }
}

@keyframes bounceInRight {
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: var(--cubic-bezier);
  }
  from {
    transform: translateX(1000px);
  }
  60% {
    transform: translateX(-16px);
  }
  75% {
    transform: translateX(8px);
  }
  90% {
    transform: translateX(-4px);
  }
  to {
    transform: none;
  }
}

@keyframes bounceOutBottom {
  from {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-16px);
  }
  to {
    transform: translateY(1000px);
  }
}

@keyframes bounceOutRight {
  from {
    transform: translateX(0);
  }
  40% {
    transform: translateX(-16px);
  }
  to {
    transform: translateX(1000px);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideOutLeft {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0%);
  }
}

@keyframes slideOutRight {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(100%);
  }
}

@keyframes slideInBottom {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideOutTop {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

@keyframes slideInTop {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideOutBottom {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(100%);
  }
}

@keyframes slideFadeInLeft {
  from {
    transform: translateX(-4rem);
    opacity: 0;
  }
  to {
    transform: translateX(0rem);
    opacity: 1;
  }
}

@keyframes slideFadeOutLeft {
  from {
    transform: translateX(0rem);
    opacity: 1;
  }
  to {
    transform: translateX(-4rem);
    opacity: 0;
  }
}

@keyframes slideFadeInRight {
  from {
    transform: translateX(4rem);
    opacity: 0;
  }
  to {
    transform: translateX(0rem);
    opacity: 1;
  }
}

@keyframes slideFadeOutRight {
  from {
    transform: translateX(0rem);
    opacity: 1;
  }
  to {
    transform: translateX(4rem);
    opacity: 0;
  }
}

@keyframes highlightTarget {
  0%,
  75% {
    outline: 2px solid var(--focus-color);
  }

  100% {
    outline: 2px solid transparent;
  }
}
